name: "SCA using Snyk"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: write
  security-events: write

jobs:
  security_testing:
    name: Security Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies (backend)
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f package.json ]; then
            npm install
          fi

      - name: Install Dependencies (frontend)
        run: |
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            pushd frontend
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            popd
          fi

      - name: Install Snyk CLI
        uses: snyk/actions/setup@master

      - name: Authenticate Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk auth "$SNYK_TOKEN"

      - name: Run Snyk test (backend)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          mkdir -p reports
          if [ -f package.json ]; then
            # Continue on error so artifacts are still uploaded even if vulns are found
            snyk test --json-file-output=reports/snyk-backend.json || true
          fi

      - name: Run Snyk test (frontend)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          if [ -d frontend ] && [ -f frontend/package.json ]; then
            pushd frontend
            snyk test --json-file-output=../reports/snyk-frontend.json || true
            popd
          fi

      - name: Upload Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: reports/*.json
          if-no-files-found: warn
