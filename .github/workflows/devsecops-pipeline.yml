name: DevSecOps CI/CD Pipeline - Complete

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  security-events: write
  actions: read

jobs:
  # ========================================
  # JOB 1: SAST - Static Application Security Testing
  # ========================================
  sast-codeql:
    name: "SAST - CodeQL Analysis"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'javascript-typescript'
          queries: security-extended,security-and-quality
          config: |
            paths-ignore:
              - 'data/static/codefixes'
              - 'test/**'
              - 'frontend/dist/**'

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript-typescript"
          output: sarif-results
          upload: true

      - name: Generate CodeQL Reports
        if: always()
        run: |
          mkdir -p reports/sast
          
          # Copier le fichier SARIF
          if [ -f sarif-results/javascript-typescript.sarif ]; then
            cp sarif-results/javascript-typescript.sarif reports/sast/codeql-results.sarif
            
            # Installer jq pour traiter JSON
            sudo apt-get update && sudo apt-get install -y jq
            
            # Créer un résumé JSON
            jq '[.runs[0].results[] | {
              rule: .ruleId,
              level: .level,
              message: .message.text,
              location: .locations[0].physicalLocation.artifactLocation.uri,
              line: .locations[0].physicalLocation.region.startLine
            }]' reports/sast/codeql-results.sarif > reports/sast/codeql-summary.json
            
            # Compter les vulnérabilités par niveau
            echo "=== CodeQL Analysis Summary ===" > reports/sast/summary.txt
            echo "Critical: $(jq '[.[] | select(.level=="error")] | length' reports/sast/codeql-summary.json)" >> reports/sast/summary.txt
            echo "High: $(jq '[.[] | select(.level=="warning")] | length' reports/sast/codeql-summary.json)" >> reports/sast/summary.txt
            echo "Medium: $(jq '[.[] | select(.level=="note")] | length' reports/sast/codeql-summary.json)" >> reports/sast/summary.txt
            echo "Total: $(jq 'length' reports/sast/codeql-summary.json)" >> reports/sast/summary.txt
            
            cat reports/sast/summary.txt
          else
            echo "No SARIF file found"
          fi

      - name: Upload SAST Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sast-codeql-results
          path: reports/sast/
          retention-days: 30